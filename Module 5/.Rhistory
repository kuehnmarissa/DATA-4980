t.test(total_commitment ~ period,alternative="two.sided")
donor_ttest <- aid_agg %>%
filter(year>=2005) %>%
mutate(period=ifelse(year<2008,'Before','After')) %>%
t.test(period ~ total_commitment ,alternative="two.sided")
donor_ttest <- aid_agg %>%
filter(year>=2005) %>%
mutate(period=ifelse(year<2008,'Before','After')) %>%
t.test(country ~ total_commitment ,alternative="two.sided")
donor_ttest <- aid_agg %>%
filter(year>=2005) %>%
mutate(period=ifelse(year<2008,'Before','After')) %>%
t.test(total_commitment ~ donor ,alternative="two.sided")
t.test(total_commitment ~ donor,
data=aid_agg %>% filter(year>=2005) %>% mutate(period=ifelse(year<2008,'Before','After')))
t.test(total_commitment ~ period,
data=aid_agg %>% filter(year>=2005) %>% mutate(period=ifelse(year<2008,'Before','After')))
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
setwd("~/Y4-25-Spring/DATA 4980 Data Visualization/DATA-4980/Module 5")
data <- read_xlsx("~/Y4-25-Spring/DATA 4980 Data Visualization/DATA-4980/Module 5/spotify-2023.xlsx")
View(data)
library(tidyverse)
sample_n(data,5)
data %>% group_by(Artist)
data %>% group_by(Artist) %>% summarize()
#
data %>% group_by(Artist) %>% summarize(song_count = n(`Track Name`))
#
data %>% group_by(Artist) %>% summarize(song_count = sum(`Track Name`))
#
data %>% group_by(Artist,`Track Name`) %>% summarize(song_count=n(`Track Name`))
#
data %>% group_by(Artist,`Track Name`) %>% summarize(songs=n(`Track Name`))
#
data %>% group_by(Artist,`Track Name`) %>% summarize(songs=n())
#
data %>% group_by(Artist) %>% summarize(songs=n())
# Number of songs by artist
data %>% group_by(Artist) %>% summarize(occurances=n())
```{r}
# Sample 5 random rows to display
sample_n(data,5)
# Number of songs by artist
data %>% group_by(Artist) %>% summarize(occurrences=n())
# Number of artist occurrences in data
data %>% group_by(Artist) %>% summarize(occurrences=n(), sum_streams=sum(Streams))
# Number of artist occurrences in data
data %>% group_by(Artist) %>% summarize(occurrences=n(), total_streams=sum(Streams))
# Number of artist occurrences in data
data %>% group_by(Artist) %>% summarize(occurrences=n(), total_streams=sum(Streams), avg_bpm=mean(BPM))
artists <- data %>% group_by(Artist) %>% summarize(songs=n(), total_streams=sum(Streams), avg_bpm=mean(BPM))
sample_n(artists,5)
View(artists)
artists %>% arrange(total_streams)
artists %>% arrange(total_streams) %>% top_n(5)
artists %>% arrange(total_streams)
artists %>% arrange(total_streams,desc)
artists %>% top_n(5)
artists %>% top_n(total_streams, 5)
artists %>% arrange(total_streams)
artists %>% arrange(desc(total_streams))
artists %>% arrange(desc(total_streams)) %>% top_n(10)
artists %>% arrange(desc(total_streams)) %>% slice(:5)
artists %>% arrange(desc(total_streams)) %>% slice(n():5)
artists %>% arrange(desc(total_streams)) %>% slice(n())
artists %>% arrange(desc(total_streams)) %>% slice(5)
artists %>% arrange(desc(total_streams)) %>% slice(1:10)
# Create dataframe grouped by artist with number of songs in the dataset, total streams, and average BPM of songs in the dataset
artists <- data %>% group_by(Artist) %>% summarize(songs=n(), total_streams=sum(Streams))
```{r}
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyverse)
data <- read_xlsx("~/Y4-25-Spring/DATA 4980 Data Visualization/DATA-4980/Module 5/spotify-2023.xlsx")
# Sample 5 random rows to display
sample_n(data,5)
# Create dataframe grouped by artist with number of songs in the dataset, total streams, and average BPM of songs in the dataset
artists <- data %>% group_by(Artist) %>% summarize(songs=n(), total_streams=sum(Streams))
sample_n(artists,5)
artists %>%
arrange(desc(total_streams)) %>%
slice(1:10) %>%
ggplot()
top10 <- artists %>%
arrange(desc(total_streams)) %>%
slice(1:10)
View(top10)
top10 %>% ggplot()+
geom_bar(aes(x=Artist,y=total_streams))
top10 %>% ggplot()+
geom_bar(aes(x=Artist,y=total_streams))
top10 %>% ggplot()+
geom_bar(aes(y=total_streams))
top10 %>% ggplot()+
geom_col(aes(x=Artist,y=total_streams))
top10 %>% ggplot()+
geom_col(aes(x=Artist,y=total_streams))+
coord_flip()
View(top10)
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
coord_flip()
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams,fill=songs))+
coord_flip()
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
coord_flip()
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists",x="Artist",y="Total Streams (Across All Songs)")
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists",x="Artist",y="Total Streams (Across All Songs)") +
coord_flip()
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists",x="Artist",y="Total Streams Across All Songs") +
scale_y_continuous(labels = unit_format(unit = "M", scale = 1e-6))
coord_flip()
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists",x="Artist",y="Total Streams Across All Songs") +
scale_y_continuous(labels = unit_format(unit = "M", scale = 1e-6))
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists",x="Artist",y="Total Streams Across All Songs") +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6))
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists",x="Artist",y="Total Streams Across All Songs") +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists",x="Artist",y="Total Streams Across All Songs in Millions") +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
sample_n(years,5)
# Create dataframe grouped by year with number of songs in the dataset and total streams
years <- data %>% group_by(`Year Released`) %>% summarize(songs=n(), total_streams=sum(Streams))
sample_n(years,5)
years %>% ggplot()+
geom_bin2d(aes(x=`Year Released`,y=songs,fill=total_streams))
years %>% ggplot()+
geom_bin2d(aes(x=`Year Released`,y=songs,group=total_streams))
years %>% ggplot()+
geom_point(aes(x=`Year Released`,y=songs,group=total_streams))
years %>% ggplot()+
geom_point(aes(x=`Year Released`,y=songs,fill=total_streams))
years %>% ggplot()+
geom_point(aes(x=`Year Released`,y=songs))
years %>% ggplot()+
geom_bar(aes(x=`Year Released`,y=songs))
years %>% ggplot()+
geom_bar(aes(y=songs))
years %>% ggplot()+
geom_col(aes(x=`Year Released`,y=songs))
years %>% ggplot()+
geom_col(aes(x=`Year Released`,y=songs))+
labs(title="Number of Songs Released By Year",x="Year Released",y="Songs Released")
years %>% ggplot()+
geom_col(aes(x=`Year Released`,y=total_streams))+
labs(title="Number of Songs Released By Year",x="Year Released",y="Total Streams")
knitr::opts_chunk$set(echo = TRUE)
data
library(readxl)
library(tidyverse)
data <- read_xlsx("~/Y4-25-Spring/DATA 4980 Data Visualization/DATA-4980/Module 5/spotify-2023.xlsx")
data
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyverse)
data <- read_xlsx("~/Y4-25-Spring/DATA 4980 Data Visualization/DATA-4980/Module 5/spotify-2023.xlsx")
data
# Create dataframe grouped by artist with number of songs in the dataset and total streams
artists <- data %>% group_by(Artist) %>% summarize(songs=n(), total_streams=sum(Streams))
sample_n(artists,5)
# Obtain top 10 artists by total stream count
top10 <- artists %>%
arrange(desc(total_streams)) %>%
slice(1:10)
# Create dataframe grouped by artist with number of songs in the dataset and total streams
artists <- data %>% group_by(Artist) %>% summarize(songs=n(), total_streams=sum(Streams))
# Obtain top 10 artists by total stream count
top10 <- artists %>%
arrange(desc(total_streams)) %>%
slice(1:10)
# Obtain top 10 artists by total stream count
top10 <- artists %>%
arrange(desc(total_streams)) %>%
slice(1:10)
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists",x="Artist",y="Total Streams Across All Songs in Millions") +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists' Streams on Spotify",x="Artist",y="Total Streams Across All Songs in Millions") +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists: Total Streams on Spotify",x="Artist",y="Total Streams Across All Songs in Millions") +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,songs),y=songs))+
labs(title="Top 10 Artists: Number of Songs on Spotify",x="Artist",y="Count of Songs") +
coord_flip()
# Create bar chart
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=songs))+
labs(title="Top 10 Artists Number of Songs on Spotify",x="Artist",y="Count of Songs") +
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyverse)
data <- read_xlsx("~/Y4-25-Spring/DATA 4980 Data Visualization/DATA-4980/Module 5/spotify-2023.xlsx")
data
# Create dataframe grouped by artist with number of songs in the dataset and total streams
artists <- data %>% group_by(Artist) %>% summarize(songs=n(), total_streams=sum(Streams))
# Obtain top 10 artists by total stream count
top10 <- artists %>%
arrange(desc(total_streams)) %>%
slice(1:10)
# Create bar chart
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists: Total Streams on Spotify",x="Artists",y="Total Streams Across All Songs in Millions") +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
# Create bar chart
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=songs))+
labs(title="Top 10 Artists Number of Songs on Spotify",x="Artists, Ordered By Total Streams",y="Count of Songs") +
coord_flip()
# Create bar chart
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=songs))+
labs(title="Top 10 Artists Number of Songs on Spotify",subtitle="Artists Ordered By Total Streams on Spotify",x="Artist",y="Count of Songs") +
coord_flip()
# Create bar chart
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists: Total Streams on Spotify",x="Artist",y="Total Streams Across All Songs in Millions") +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
# Create bar chart
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=songs))+
labs(title="Top 10 Artists: Number of Songs on Spotify",subtitle="Artists Ordered By Total Streams on Spotify",x="Artist",y="Count of Songs") +
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyverse)
data <- read_xlsx("~/Y4-25-Spring/DATA 4980 Data Visualization/DATA-4980/Module 5/spotify-2023.xlsx")
data
# Create dataframe grouped by artist with number of songs in the dataset and total streams
artists <- data %>% group_by(Artist) %>% summarize(songs=n(), total_streams=sum(Streams))
# Obtain top 10 artists by total stream count
top10 <- artists %>%
arrange(desc(total_streams)) %>%
slice(1:10)
# Create bar chart
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists: Total Streams on Spotify",x="Artist",y="Total Streams Across All Songs in Millions") +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
# Create bar chart
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=songs))+
labs(title="Top 10 Artists: Number of Songs on Spotify",subtitle="Artists Ordered By Total Streams on Spotify",x="Artist",y="Count of Songs") +
coord_flip()
# Create dataframe grouped by year with number of songs in the dataset and total streams
years <- data %>% group_by(`Year Released`) %>% summarize(songs=n(), total_streams=sum(Streams))
years %>% ggplot()+
geom_col(aes(x=`Year Released`,y=songs))+
labs(title="Number of Songs Released By Year",x="Year Released",y="Songs Released")
years %>% ggplot()+
geom_col(aes(x=`Year Released`,y=total_streams))+
labs(title="Number of Songs Released By Year",x="Year Released",y="Total Streams")
years %>% ggplot()+
geom_line(aes(x=`Year Released`,y=total_streams))+
labs(title="Number of Songs Released By Year",x="Year Released",y="Total Streams")
years %>% ggplot()+
geom_line(aes(x=`Year Released`,y=total_streams))+
labs(title="Number of Songs Released By Year",x="Year Released",y="Total Streams")+
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6))
years %>% ggplot()+
geom_line(aes(x=`Year Released`,y=total_streams))+
labs(title="Number of Songs Released By Year",x="Year Released",y="Total Streams in Millions")+
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6))
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyverse)
data <- read_xlsx("~/Y4-25-Spring/DATA 4980 Data Visualization/DATA-4980/Module 5/spotify-2023.xlsx")
data
# Create dataframe grouped by artist with number of songs in the dataset and total streams
artists <- data %>% group_by(Artist) %>% summarize(songs=n(), total_streams=sum(Streams))
# Obtain top 10 artists by total stream count
top10 <- artists %>%
arrange(desc(total_streams)) %>%
slice(1:10)
# Create bar chart
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=total_streams))+
labs(title="Top 10 Artists: Total Streams on Spotify",x="Artist",y="Total Streams in Millions") +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
# Create bar chart
top10 %>%
ggplot()+
geom_col(aes(x=fct_reorder(Artist,total_streams),y=songs))+
labs(title="Top 10 Artists: Number of Songs on Spotify",subtitle="Artists Ordered By Total Streams on Spotify",x="Artist",y="Count of Songs") +
coord_flip()
# Create dataframe grouped by year with number of songs in the dataset and total streams
years <- data %>% group_by(`Year Released`) %>% summarize(songs=n(), total_streams=sum(Streams))
years %>% ggplot()+
geom_point(aes(x=`Year Released`,y=total_streams))+
labs(title="Number of Songs Released By Year",x="Year Released",y="Total Streams in Millions")+
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6))
years %>% ggplot()+
geom_col(aes(x=`Year Released`,y=total_streams))+
labs(title="Number of Songs Released By Year",x="Year Released",y="Total Streams in Millions")+
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6))
# Create bar chart
years %>% ggplot()+
geom_col(aes(x=`Year Released`,y=total_streams))+
labs(title="Number of Songs Released By Year in Spotify",x="Year Released",y="Total Streams in Millions")+
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6))
# Create bar chart
years %>% ggplot()+
geom_hist(aes(x=`Year Released`))+
labs(title="Number of Songs Released By Year in Spotify",x="Year Released",y="Total Streams in Millions")+
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6))
# Create bar chart
years %>% ggplot()+
geom_hist(aes(x=`Year Released`))+
labs(title="Number of Songs Released By Year in Spotify",x="Year Released",y="Total Streams in Millions")
# Create bar chart
years %>% ggplot()+
geom_histogram(aes(x=`Year Released`))+
labs(title="Number of Songs Released By Year in Spotify",x="Year Released",y="Total Streams in Millions")
# Create bar chart
years %>% ggplot()+
geom_histogram(aes(x=`Year Released`))+
labs(title="Number of Songs Released By Year in Spotify",x="Year Released",y="Count of Songs Released")
# Create bar chart
years %>% ggplot()+
geom_histogram(aes(x=`Year Released`))+
labs(title="Number of Songs Released By Year in Spotify",x="Year Released",y="Frequency")
# Create bar chart
years %>% ggplot()+
geom_histogram(aes(x=`Year Released`))+
labs(title="Number of Songs Released in each Year",x="Year Released",y="Frequency")
# Create bar chart
years %>% ggplot()+
geom_histogram(aes(x=`Year Released`))+
labs(title="Number of Songs Released in Each Year",x="Year Released",y="Frequency")
# Create bar chart
years %>% ggplot()+
geom_histogram(aes(x=`Year Released`),binwidth = 1)+
labs(title="Number of Songs Released in Each Year",x="Year Released",y="Frequency")
# Create bar chart
years %>% ggplot()+
geom_histogram(aes(x=`Year Released`,y=songs),binwidth = 1)+
labs(title="Number of Songs Released in Each Year",x="Year Released",y="Frequency")
# Create bar chart
years %>% ggplot()+
geom_histogram(aes(x=`Year Released`),binwidth = 1)+
labs(title="Number of Songs Released in Each Year",x="Year Released",y="Frequency")
# Create bar chart
years %>% ggplot()+
geom_histogram(aes(x=`Year Released`))+
labs(title="Number of Songs Released in Each Year",x="Year Released",y="Frequency")
# Create dataframe grouped by year with number of songs in the dataset and total streams
musical_mode <- data %>% group_by(Mode) %>% summarize(songs=n(), total_streams=sum(Streams))
musical_key <- data %>% group_by(Key) %>% summarize(songs=n(), total_streams=sum(Streams))
musical_bpm <- data %>% group_by(BPM) %>% summarize(songs=n(), total_streams=sum(Streams))
View(musical_bpm)
musical_key <- data %>% group_by(Key) %>% summarize(songs=n(), total_streams=sum(Streams))
# Create dataframe grouped by year with number of songs in the dataset and total streams
musical_mode <- data %>% group_by(Mode) %>% summarize(songs=n(), total_streams=sum(Streams))
musical_key <- data %>% group_by(Key) %>% summarize(songs=n(), total_streams=sum(Streams))
View(musical_key)
View(musical_mode)
musical_mode %>% ggplot(aes(y=songs,group=Mode) +
musical_mode %>% ggplot(aes(y=songs,group=Mode)) +
geom_col()+
coord_polar(theta="y")
musical_mode %>% ggplot(aes(x="",y=songs,group=Mode)) +
geom_col()+
coord_polar(theta="y")
musical_mode %>% ggplot(aes(x="",y=songs,fill=Mode)) +
geom_col()+
coord_polar(theta="y")
musical_mode %>% ggplot(aes(x="",y=songs,fill=Mode)) +
geom_col()+
coord_polar(theta="y")+
theme_void()
musical_mode %>% ggplot(aes(x="",y=songs,fill=Mode)) +
geom_col()+
coord_polar(theta="y")+
geom_text(aes(label=songs, position=position_stack(vjust=0.5)))+
theme_void()
musical_mode %>% ggplot(aes(x="",y=songs,fill=Mode)) +
geom_col()+
coord_polar(theta="y")+
geom_text(aes(label=songs), position=position_stack(vjust=0.5)))+
musical_mode %>% ggplot(aes(x="",y=songs,fill=Mode)) +
geom_col()+
coord_polar(theta="y")+
geom_text(aes(label=songs), position=position_stack(vjust=0.5))+
theme_void()
musical_mode %>% ggplot(aes(x="",y=songs,fill=Mode)) +
geom_col()+
coord_polar(theta="y")+
geom_text(aes(label=songs), position=position_stack(vjust=0.5))+
theme_void()
musical_mode %>% ggplot(aes(x="",y=songs,fill=Mode)) +
geom_col()+
coord_polar(theta="y")+
geom_text(aes(label=songs/sum(songs)*100), position=position_stack(vjust=0.5))+
theme_void()
musical_mode %>% ggplot(aes(x="",y=songs,fill=Mode)) +
geom_col()+
coord_polar(theta="y")+
labs(title="Spotify Songs By Musical Mode")
theme_void()
musical_mode %>% ggplot(aes(x="",y=songs,fill=Mode)) +
geom_col()+
coord_polar(theta="y")+
labs(title="Spotify Songs By Musical Mode")+
theme_void()
musical_mode %>% ggplot(aes(x="",y=songs,fill=Mode)) +
geom_col()+
labs(title="Spotify Songs By Musical Mode")
musical_mode %>% ggplot(aes(x=Mode,y=songs)) +
geom_col()+
labs(title="Spotify Songs By Musical Mode")
musical_mode %>% ggplot(aes(x=Mode,y=songs)) +
geom_col()+
labs(title="Spotify Songs By Musical Mode",x="Mode",y="Songs")
# Create bar chart
musical_mode %>% ggplot(aes(x=Key,y=songs)) +
geom_col()+
labs(title="Spotify Songs By Musical Mode",x="Mode",y="Songs")
# Create bar chart
musical_key %>% ggplot(aes(x=Key,y=songs)) +
geom_col()+
labs(title="Spotify Songs By Musical Mode",x="Key",y="Songs")
# Create bar chart
musical_key %>% ggplot(aes(x=fct_reorder(Key,songs),y=songs)) +
geom_col()+
labs(title="Spotify Songs By Musical Mode",x="Key",y="Songs")
# Create bar chart
musical_key %>% ggplot(aes(x=fct_reorder(Key,desc(songs),y=songs)) +
# Create bar chart
musical_key %>% ggplot(aes(x=fct_reorder(Key,desc(songs)),y=songs)) +
geom_col()+
labs(title="Spotify Songs By Musical Mode",x="Key",y="Songs")
# Create bar chart
musical_key %>% ggplot(aes(x=fct_reorder(Key,desc(songs)),y=songs)) +
# Create bar chart
musical_key %>% ggplot(aes(x=fct_reorder(Key,desc(songs)),y=songs)) +
geom_col()+
labs(title="Spotify Songs By Musical Mode",x="Key",y="Songs")
# Create bar chart
musical_key %>% ggplot(aes(x=fct_reorder(Key,desc(songs)),y=songs)) +
geom_col()+
labs(title="Spotify Songs By Musical Key",x="Key",y="Songs")
# Create histogram
data %>% ggplot() +
geom_histogram(aes(x=BPM))+
labs(title="Distribution of Spotify Songs' Beats Per Minute (BPM)",x="BPM",y="Songs")
# Create histogram
data %>% ggplot() +
geom_histogram(aes(x=BPM))+
scale_x_binned()+
labs(title="Distribution of Spotify Songs' Beats Per Minute (BPM)",x="BPM",y="Songs")
# Create histogram
data %>% ggplot() +
geom_bar(aes(x=BPM))+
scale_x_binned()+
labs(title="Distribution of Spotify Songs' Beats Per Minute (BPM)",x="BPM",y="Songs")
